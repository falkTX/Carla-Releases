name: release

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
env:
  DEBIAN_FRONTEND: noninteractive
  HOMEBREW_NO_AUTO_UPDATE: 1

jobs:
  # linux native build
  linux:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds/builds
            ~/PawPawBuilds/debs
            ~/PawPawBuilds/downloads
            ~/PawPawBuilds/targets
          key: linux
      - name: Restore debian packages cache
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: Set up dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -qq
          sudo apt-get install -yq build-essential curl cmake jq
          sudo apt-get install -yq binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386
          sudo apt-get install -yq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable
          sudo apt-get install -yq libasound2-dev libcairo2-dev libfluidsynth-dev libgl1-mesa-dev liblo-dev libmagic-dev libpulse-dev libqt4-dev libsndfile1-dev libx11-dev libxcursor-dev libxext-dev libxrandr-dev pkg-config pyqt5-dev-tools qtbase5-dev
          sudo apt-get install -yq g++-multilib libfreetype6:i386 libx11-6:i386 libxext6:i386
          # Fix 32bit bridge build
          sudo ln -s /usr/lib/i386-linux-gnu/libX11.so.6 /usr/lib/i386-linux-gnu/libX11.so
          sudo ln -s /usr/lib/i386-linux-gnu/libXext.so.6 /usr/lib/i386-linux-gnu/libXext.so
          sudo ln -s /usr/lib/i386-linux-gnu/libfreetype.so.6 /usr/lib/i386-linux-gnu/libfreetype.so
      - name: Cache debian packages
        run: |
          mkdir -p ~/PawPawBuilds/debs
          sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Bootstrap linux
        shell: bash
        run: |
          ./PawPaw/bootstrap-carla.sh linux && ./PawPaw/.cleanup.sh linux
      #- name: Build linux
        #env:
          #LDFLAGS: -static-libgcc -static-libstdc++
        #run: |
          #./build.sh linux

  # macOS native intel build
  macos:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds/builds
            ~/PawPawBuilds/downloads
            ~/PawPawBuilds/targets
          key: macos
      - name: Set up dependencies
        run: |
          brew install cmake jq meson
      - name: Bootstrap macOS intel
        shell: bash
        run: |
          ./PawPaw/bootstrap-carla.sh macos && ./PawPaw/.cleanup.sh macos
      #- name: Build macOS intel
        #shell: bash
        #run: |
          #./build.sh macos
      #- uses: actions/upload-artifact@v2
        #with:
          #name: macOS intel package
          #path: Carla/*.dmg

  # macOS native universal build
  macos_universal:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds/builds
            ~/PawPawBuilds/downloads
            ~/PawPawBuilds/targets
          key: macos-universal
      - name: Set up dependencies
        run: |
          brew install cmake jq meson
      - name: Fix up Xcode
        run: |
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s "/Applications/Xcode_12.3.app"
      - name: Bootstrap macOS universal
        shell: bash
        run: |
          ./PawPaw/bootstrap-carla.sh macos-universal && ./PawPaw/.cleanup.sh macos-universal
      #- name: Build macOS universal
        #shell: bash
        #run: |
          #./build.sh macos-universal
      #- uses: actions/upload-artifact@v2
        #with:
          #name: macOS universal package
          #path: Carla/*.dmg

  # linux with win32 cross-compilation
  win32:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds/builds
            ~/PawPawBuilds/debs
            ~/PawPawBuilds/downloads
            ~/PawPawBuilds/targets
          key: win32
      - name: Restore debian packages cache
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: Set up dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -qq
          sudo apt-get install -yq build-essential curl cmake jq llvm qttools5-dev-tools
          sudo apt-get install -yq binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386
      - name: Cache debian packages
        run: |
          mkdir -p ~/PawPawBuilds/debs
          sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Bootstrap win32 cross-compiled
        shell: bash
        run: |
          ./PawPaw/bootstrap-carla.sh win32 && ./PawPaw/.cleanup.sh win32
      #- name: Build win32 cross-compiled
        #shell: bash
        #run: |
          #./build.sh win32
      #- uses: actions/upload-artifact@v2
        #with:
          #name: win32 installer
          #path: Carla/*.zip

  # linux with win64 cross-compilation
  win64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds/builds
            ~/PawPawBuilds/debs
            ~/PawPawBuilds/downloads
            ~/PawPawBuilds/targets
          key: win64
      - name: Restore debian packages cache
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: Set up dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -qq
          sudo apt-get install -yq build-essential curl cmake jq llvm qttools5-dev-tools
          sudo apt-get install -yq binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386
          sudo apt-get install -yq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable
      - name: Cache debian packages
        run: |
          mkdir -p ~/PawPawBuilds/debs
          sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Bootstrap win64 cross-compiled
        shell: bash
        run: |
          ./PawPaw/bootstrap-carla.sh win64 && ./PawPaw/.cleanup.sh win64
      #- name: Build win64 cross-compiled
        #shell: bash
        #run: |
          #./build.sh win64
      #- uses: actions/upload-artifact@v2
        #with:
          #name: win64 installer
          #path: Carla/*.zip
